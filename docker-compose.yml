version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: uknf-postgres
    environment:
      POSTGRES_DB: uknf_communication
      POSTGRES_USER: uknf_user
      POSTGRES_PASSWORD: uknf_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - uknf-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U uknf_user -d uknf_communication"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Session Store
  redis:
    image: redis:7-alpine
    container_name: uknf-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - uknf-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes

  # MinIO S3-Compatible Object Storage
  minio:
    image: minio/minio:latest
    container_name: uknf-minio
    environment:
      MINIO_ROOT_USER: uknf_minio_admin
      MINIO_ROOT_PASSWORD: uknf_minio_password
    ports:
      - "9000:9000" # API
      - "9001:9001" # Console
    volumes:
      - minio_data:/data
    networks:
      - uknf-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    command: server /data --console-address ":9001"

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: uknf-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: uknf_rabbitmq_user
      RABBITMQ_DEFAULT_PASS: uknf_rabbitmq_password
    ports:
      - "5672:5672" # AMQP
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - uknf-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 30s
      retries: 3

  # MinIO Client for bucket initialization
  minio-client:
    image: minio/mc:latest
    container_name: uknf-minio-client
    depends_on:
      - minio
    networks:
      - uknf-network
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set minio http://minio:9000 uknf_minio_admin uknf_minio_password;
      /usr/bin/mc mb minio/uknf-files --ignore-existing;
      /usr/bin/mc policy set private minio/uknf-files;
      exit 0;
      "

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local
  rabbitmq_data:
    driver: local

networks:
  uknf-network:
    driver: bridge
